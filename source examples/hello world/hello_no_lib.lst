     1                                  ;******************************************************************************
     2                                  ; HELLO WORLD
     3                                  ;
     4                                  ;   In keeping with programming tradition, this is the classic Hello World
     5                                  ;   program.
     6                                  ;
     7                                  ;   This version does not use the lib_app.asm library, instead this program
     8                                  ;   will do direct system calls. The main advantage of doing it this way is
     9                                  ;   to create a VERY small program (52 bytes vs 2516 bytes).
    10                                  ;******************************************************************************
    11                                  
    12                                  org 0x70000000              ; all user programs must originate at this address
    13                                  bits 64                     ; must use 64 bit directive
    14 00000000 EB11                    jmp ENTRY                   ; jump to actual code, the name can be any name you like
    15                                  
    16                                  ;***********************************
    17                                  ;   PROGRAM DATA
    18                                  ;***********************************
    19 00000002 48656C6C6F20576F72-     msg         db 'Hello World!',0 ; a NULL terminated string to print
    19 0000000B 6C642100           
    20 0000000F 1400                    x           dw 20
    21 00000011 3200                    y           dw 50
    22                                  
    23                                  ENTRY:
    24                                  ;	Parameters:	RDX = 0x121
    25                                  ;			AX = X coordinate
    26                                  ;			BX = Y coordinate
    27                                  ;			ECX = color
    28                                  ;			RSI = memory location of NULL terminated string
    29 00000013 48BE-                   mov rsi,msg
    29 00000015 [0200000000000000] 
    30 0000001D 668B0425[0F000000]      mov ax,[x]
    31 00000025 668B1C25[11000000]      mov bx,[y]
    32 0000002D B900FF0000              mov ecx, 0x00FF00
    33 00000032 BA21010000              mov rdx,0x121
    34 00000037 CDFF                    int 0xFF
    35                                  
    36                                  ; Exit program
    37 00000039 BA00000000              mov rdx,0x0
    38 0000003E CDFF                    int 0xFF
